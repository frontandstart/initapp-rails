name: rubyvkube

x-app: &app
  image: rubyvkube
  build:
    context: .
    target: development
  environment:
    REDIS_URL: redis://redis:6379/0
    RAILS_ENV: development
    RACK_ENV: development
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    RAILS_LOG_TO_STDOUT: true
    SECRET_KEY_BASE: secret
    JWT_SECRET_KEY: secret
    HISTFILE: /data/.bash_history
    IRB_HISTORY_FILE: tmp/.irb_history
    MAILCATCHER_HOST: mailcatcher
  env_file:
    - .env
  volumes:
    - ./:/app:c
    - cache:/app/tmp/cache:d
    - bundle:/usr/local/bundle:d
    - node_modules:/app/node_modules:d
    - data:/data:d
  stdin_open: true
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  app:
    <<: *app
    ports:
      - ${PORT:-3000}:${PORT:-3000}
    healthcheck:
      test: ["CMD", "curl", "http://app:3000/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 20s
    command: bin/dev --auto-deps-install --auto-migrate

  sidekiq:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq.yml

  redis:
    image: redis:7.4.2
    volumes:
      - redis:/data:delegated
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    entrypoint: redis-server --appendonly yes
    restart: always

  postgres:
    image: postgres:17-bookworm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: 0.0.0.0
    volumes:
      - postgres:/var/lib/postgresql/data:c
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  mailcatcher:
    image: dockage/mailcatcher
    restart: on-failure:10
    ports:
      - ${MAILCATCHER_PORT:-1080}:1080

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  data:
  cache:
